name: 'OpenHEXA Push Pipeline'
description: 'Push a pipeline to OpenHEXA'
author: 'Bluesquare'

inputs:
  workspace:
    description: 'Slug of the workspace to push to'
    required: true
  pipeline:
    description: 'Code of the pipeline to push'
    required: true
  token:
    description: 'Your OpenHEXA API token'
    required: true
  path:
    description: 'Path to the pipeline file'
    default: '.'
    required: false
  versionName:
    description: 'Name of the pipeline version to create'
    required: false
  versionDescription:
    description: 'Description of the pipeline version to create'
    required: false
  url:
    description: 'OpenHEXA API URL'
    required: false
    default: 'https://api.openhexa.org'
  openhexa_version:
    description: 'OpenHEXA version to install'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Install OpenHEXA CLI
      uses: blsq/openhexa-cli-action@v1
      with:
        workspace: ${{ inputs.workspace }}
        token: ${{ inputs.token }}
        url: ${{ inputs.url }}
        openhexa_version: ${{ inputs.openhexa_version }}

    - name: Build Link
      id: build_link
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "link=https://github.com/${GITHUB_REPOSITORY}/releases/tag/${TAG_NAME}" >> $GITHUB_OUTPUT
        else
          echo "link=https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Push pipeline to OpenHEXA
      run: |
        cmd="openhexa pipelines push ${{ inputs.path }} --code '${{ inputs.pipeline }}' --link '${{ steps.build_link.outputs.link }}' --yes"
        if [ -n "${{ inputs.versionName }}" ]; then
          cmd="$cmd --name '${{ inputs.versionName }}'"
        fi
        if [ -n "${{ inputs.versionDescription }}" ]; then
          cmd="$cmd --description '${{ inputs.versionDescription }}'"
        fi
        echo $cmd
        eval $cmd
      shell: bash